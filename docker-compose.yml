version: "3.9"
networks:
  webshop:
    driver: bridge
    ipam:
      config:
        - subnet: 10.6.0.0/16
          gateway: 10.6.0.1

services:

  # Reverse proxy
  nginx:
    platform: linux/amd64
    image: nginx
    container_name: local_nginx
    volumes:
      - ./reverse_proxy.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
    networks:
      - webshop



  # Databases
  customers-db:
    #platform: linux/amd64
    image: mysql/mysql-server:8.0.25
    container_name: customers-db
    restart: always
    #volumes:
    #  - ./sql/1-init-db.sql:/docker-entrypoint-initdb.d/1-init-db.sql
    env_file:
      - ./env/customers.env
    ports:
      - "3306"
    networks:
      webshop:
        ipv4_address: 10.6.2.1

  items-db:
    #platform: linux/amd64
    image: mysql/mysql-server:8.0.25
    container_name: items-db
    #volumes:
    #  - ./sql/1-init-db.sql:/docker-entrypoint-initdb.d/1-init-db.sql
    env_file:
      - ./env/items.env
    ports:
      - "3306"
    networks:
      webshop:
        ipv4_address: 10.6.2.2

  orders-db:
    #platform: linux/amd64
    image: mysql/mysql-server:8.0.25
    container_name: orders-db
    #volumes:
    #  - ./sql/1-init-db.sql:/docker-entrypoint-initdb.d/1-init-db.sql
    env_file:
      - ./env/orders.env
    ports:
      - "3306"
    networks:
      webshop:
        ipv4_address: 10.6.2.3



  # Java services
  customers:
    build:
      context: ./customers
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080"
    depends_on:
      - customers-db
    environment:
      MYSQL_HOST: 10.6.2.1
    env_file:
      - ./env/customers.env
    networks:
      webshop:
        ipv4_address: 10.6.1.2

  items:
    build:
      context: ./items
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080"
    depends_on:
      - items-db
    environment:
      MYSQL_HOST: 10.6.2.2
    env_file:
      - ./env/items.env
    networks:
      webshop:
        ipv4_address: 10.6.1.3

  orders:
    build:
      context: ./orders
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080"
    depends_on:
      - orders-db
    environment:
        MYSQL_HOST: 10.6.2.3
    env_file:
      - ./env/orders.env
    networks:
      webshop:
        ipv4_address: 10.6.1.4


